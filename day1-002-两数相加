原题:https://leetcode-cn.com/problems/add-two-numbers/submissions/

实现：
  1）总体思路：同时从两个list按顺序读取数字，相加取10的余数作为新节点值、取10的整除作为进位数，直到两个list数字被读取完；如果
  进位数不为零，添加新节点存储进位数。
  
C++代码：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head=nullptr;
        ListNode* temp=nullptr;
        int carry = 0;
        
        while(l1 || l2){
            int sum = 0;
            if(l1 && l2){
                sum = l1->val + l2->val + carry;
                l1 = l1->next;
                l2 = l2->next;
            }
            else if(l1==nullptr){
                sum = l2->val + carry;
                l2 = l2->next;
            }
            else{
                sum = l1->val + carry;
                l1 = l1->next;
            }

            carry = sum/10;
            if(head==nullptr){
                head = temp = new ListNode(sum%10);
            }else{
                temp->next = new ListNode(sum%10);
                temp = temp->next;
            }
        }
        if (carry!=0) temp->next = new ListNode(carry);
        return head;
    }
};
  
